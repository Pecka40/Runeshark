/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MenuStrip.java
 *
 * Created on Feb 23, 2012, 3:25:56 PM
 */
package ui;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;

import javax.swing.JToolBar;

import util.Configuration;
import util.io.HttpClient;

import bot.InputManager;
import bot.script.ScriptManager;

/**
 * 
 * @author Tim
 */
public class MenuStrip {
	/** Creates new form MenuStrip */
	public MenuStrip() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenu2 = new javax.swing.JMenu();
		jToolBar1 = new javax.swing.JToolBar();
		jButton1 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();

		jMenu1.setText("File");
		jMenuBar1.add(jMenu1);

		jMenu2.setText("Edit");
		jMenuBar1.add(jMenu2);

		jToolBar1.setFloatable(false);
		jToolBar1.setRollover(true);
		jToolBar1.setPreferredSize(new java.awt.Dimension(756, 20));

		try {
			jButton1.setIcon(new javax.swing.ImageIcon(Configuration
					.getIcon("control_play.png")));
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} // NOI18N
		jButton1.setFocusable(false);
		jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		try {
			jButton1.setPressedIcon(new javax.swing.ImageIcon(Configuration
					.getIcon("control_play_blue.png")));
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} // NOI18N
		jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton1);

		try {
			jButton3.setIcon(new javax.swing.ImageIcon(Configuration
					.getIcon("script_lightning.png")));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // NOI18N
		jButton3.setFocusable(false);
		jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton3);

		try {
			jButton2.setIcon(new javax.swing.ImageIcon(Configuration
					.getIcon("tick.png")));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // NOI18N
		jButton2.setFocusable(false);
		jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton2);

		try {
			jButton4.setIcon(new javax.swing.ImageIcon(Configuration
					.getIcon("arrow_in.png")));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // NOI18N
		jButton4.setFocusable(false);
		jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});
		jToolBar1.add(jButton4);
	}// </editor-fold>

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		if (ScriptManager.getCurrent().getCurrentScript() == null) {
			java.awt.EventQueue.invokeLater(new Runnable() {
				public void run() {
					new ScriptSelector().setVisible(true);
				}
			});
		} else {
			ScriptManager.getCurrent().stopScript();
			try {
				jButton1.setIcon(new javax.swing.ImageIcon(Configuration
						.getIcon("control_play.png")));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		ArrayList<String> URLS = new ArrayList<String>();
		BufferedReader br = null;
		try {
			br = new BufferedReader(new InputStreamReader(
					new URL("http://www.runeshark.net/network/NetworkInfo.txt")
							.openStream()));
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		String input;
		try {
			while ((input = br.readLine()) != null) {
				URLS.add(input);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		for (int i = 0; i < URLS.size(); i++) {
			try {
				HttpClient.download(
						new URL(URLS.get(i)),
						new File(Configuration.Paths.getScriptsDirectory()
								+ File.separator
								+ URLS.get(i).substring(
										URLS.get(i).lastIndexOf("/"))));
			} catch (MalformedURLException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		InputManager.getCurrent().setInput(
				!InputManager.getCurrent().getInput());
		if (InputManager.getCurrent().getInput()) {
			try {
				jButton2.setIcon(new javax.swing.ImageIcon(Configuration
						.getIcon("tick.png")));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} else {
			try {
				jButton2.setIcon(new javax.swing.ImageIcon(Configuration
						.getIcon("keyboard.png")));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		BotFrame.getCurrent().hideTrayActionPerformed();
	}

	public JToolBar getBar() {
		return jToolBar1;
	}

	// Variables declaration - do not modify
	static javax.swing.JButton jButton1;
	static javax.swing.JButton jButton2;
	static javax.swing.JButton jButton3;
	static javax.swing.JButton jButton4;
	static javax.swing.JMenu jMenu1;
	static javax.swing.JMenu jMenu2;
	static javax.swing.JMenuBar jMenuBar1;
	static javax.swing.JToolBar jToolBar1;
	// End of variables declaration
}
